{"version":3,"file":"static/js/92.7cd1f681.chunk.js","mappings":"2NAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,EClBpB,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAgI,0B,mBC+EhI,MAzEA,WACE,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAcC,EAAAA,EAAAA,QAAOhB,KACrBiB,GAAgBD,EAAAA,EAAAA,QAAOhB,KAEvBkB,GAAWC,EAAAA,EAAAA,MAuBXC,EAAQ,WACZR,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMO,UAAWC,EAAQC,SAnBF,SAAAC,GACvBA,EAAEC,iBAEF,IAAMC,EAAa,CACjBf,KAAAA,EACAE,OAAAA,EACAc,SAAS,GAGXT,GAASU,EAAAA,EAAAA,IAAWF,IACpBN,GACD,EAQC,WACE,mBAAOC,UAAWC,EAASO,QAASd,EAApC,kBAEE,kBACEM,UAAWC,EACXQ,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAOvB,EACPwB,SAtCiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BxB,EAAQwB,EAAOF,MAChB,EAqCO5B,GAAIS,QAIR,mBAAOM,UAAWC,EAASO,QAASZ,EAApC,oBAEE,kBACEI,UAAWC,EACXQ,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,MAAOrB,EACPsB,SAjDmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5BtB,EAAUsB,EAAOF,MAClB,EAgDO5B,GAAIW,QAGR,mBAAQI,UAAWC,EAAOQ,KAAK,SAA/B,2BAKL,EC7ED,EAAuB,2BAAvB,EAAwD,0BC4BxD,EA1BqB,SAAC,GAMf,IALLnB,EAKI,EALJA,KACAE,EAII,EAJJA,OACAP,EAGI,EAHJA,GACA+B,EAEI,EAFJA,qBACAC,EACI,EADJA,kBAEA,OACE,gBAAIjB,UAAWC,EAAf,WACE,kBAAOQ,KAAK,WAAWnB,KAAML,EAAI6B,SAAUE,KAC3C,yBACG1B,EADH,KACWE,MAEX,mBACEQ,UAAWC,EACXiB,QAAS,WACPD,EAAkBhC,EACnB,EACDwB,KAAK,SALP,sBAWL,EC3BYU,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAE1BC,EAEND,EAFFE,KAAQD,MACRE,EACEH,EADFG,OAEF,IAAKA,EACH,OAAOF,EAGT,IAAMG,EAAmBD,EAAOE,cAMhC,OALsBJ,EAAME,QAAO,YAEjC,OAF+C,EAAXjC,KACRmC,cACNC,SAASF,EAChC,GAGF,EChBYG,EAAa,SAAC,GAAD,SAAGP,SAAwBE,KAAKM,OAAhC,ECC1B,EAAuB,0BAAvB,EAAuD,yBCAvD,EAA2B,+BAA3B,EAAkE,4BAAlE,EAAsG,4BCatG,EAZqB,WACnB,OACE,gBAAK5B,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACE,iBAAMD,UAAWC,EAAjB,2BACA,uCACA,wDAIP,ECyDD,EAvDqB,WACnB,IAAMmB,GAAWS,EAAAA,EAAAA,IAAYV,GACvBS,GAAUC,EAAAA,EAAAA,IAAYF,GAEtB9B,GAAWC,EAAAA,EAAAA,OAEjBgC,EAAAA,EAAAA,YAAU,WACRjC,GAASkC,EAAAA,EAAAA,MACV,GAAE,CAAClC,IAEJ,IAAMoB,EAAoB,SAAAhC,GACxBY,GAASmC,EAAAA,EAAAA,IAAc/C,GACxB,EAEK+B,EAAuB,SAAC,GAAgB,IACtCiB,EADqC,EAAblB,OACLzB,KACzBO,GAASqC,EAAAA,EAAAA,IAAcD,GACxB,EAOKE,EAAef,EAASgB,MAAK,qBAAG9B,OAAH,IAEnC,OACE,gCACGsB,IAAW,SAAC,EAAD,KACZ,gBAAI5B,UAAWC,EAAf,UACGmB,EAASiB,KAAI,gBAAG/C,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQP,EAAjB,EAAiBA,GAAjB,OACZ,SAAC,EAAD,CAEEK,KAAMA,EACNE,OAAQA,EACRP,GAAIA,EACJ+B,qBAAsBA,EACtBC,kBAAmBA,GALdhC,EAFK,IAUO,IAApBmC,EAASkB,SACR,mBACEtC,UAAWC,EACXiB,QAxBmB,WAC3B,IAAMqB,EAAiBnB,EAASG,QAAO,qBAAGjB,OAAH,IACvCT,GAAS2C,EAAAA,EAAAA,IAAsBD,GAChC,EAsBS9B,KAAK,SACLgC,UAAWN,EAJb,iCAYT,E,UCnEYO,EAAY,SAAC,GAAD,SAAGtB,SAAwBG,MAA3B,ECCzB,EAAwB,8BAAxB,EAA8D,8BC0B9D,EArBuB,WACrB,IAAMA,GAASM,EAAAA,EAAAA,IAAYa,GACrB7C,GAAWC,EAAAA,EAAAA,MAMjB,OACE,mBAAOE,UAAWC,EAAlB,mCAEE,kBACED,UAAWC,EACXa,SATgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBlB,GAAS8C,EAAAA,EAAAA,GAAU5B,EAAOF,OAC3B,EAQKA,MAAOU,EACPd,KAAK,WAIZ,ECvBD,EAFc,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAAe,wBAAKA,GAApB,E,8BCCd,EAA4B,4BAA5B,EAAkE,0BAAlE,EAAmG,uBC0BnG,EArBiB,WACf,OAAwBkB,EAAAA,EAAAA,IAAYe,EAAAA,GAA5BtD,EAAR,EAAQA,KAAMuD,EAAd,EAAcA,MACRhD,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iBAAKE,UAAWC,EAAhB,WACE,oCAAYX,EAAZ,QACA,iBAAKU,UAAWC,EAAhB,WACE,uBAAI4C,KACJ,SAAC,KAAD,CAAM3B,QATc,WACxBrB,GAASiD,EAAAA,EAAAA,MACV,EAOuCC,GAAG,IAAI/C,UAAWC,EAApD,yBAMP,ECND,EAbiB,WACf,OACE,iCACE,SAAC,EAAD,KACA,SAAC,EAAD,CAAOU,MAAO,eACd,SAAC,EAAD,KACA,SAAC,EAAD,CAAOA,MAAO,cACd,SAAC,EAAD,KACA,SAACqC,EAAD,MAGL,C","sources":["../node_modules/nanoid/index.browser.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactsItem.jsx","redux/contacts/list/items/items-selectors.js","redux/contacts/list/loading/loading-selecors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactList.module.css?ae34","webpack://goit-react-hw-08-phonebook/./src/components/ServerLoader/ServerLoader.module.css?9aac","components/ServerLoader/ServerLoader.jsx","components/ContactsList/ContactList.jsx","redux/contacts/filter/filter-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsSearch/ContactsSearch.module.css?133d","components/ContactsSearch/ContactsSearch.jsx","components/Title/Title.jsx","webpack://goit-react-hw-08-phonebook/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"btn\":\"ContactsForm_btn__qImoL\"};","import { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport s from './ContactsForm.module.css';\nimport { addContact } from 'redux/contacts/list/list-operations';\n\nfunction ContactsForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const inputNameId = useRef(nanoid());\n  const inputNumberId = useRef(nanoid());\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = ({ target }) => {\n    setName(target.value);\n  };\n\n  const handleNumberChange = ({ target }) => {\n    setNumber(target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n      checked: false,\n    };\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleFormSubmit}>\n      <label className={s.label} htmlFor={inputNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleNameChange}\n          id={inputNameId}\n        />\n      </label>\n\n      <label className={s.label} htmlFor={inputNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n          id={inputNumberId}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactsForm;\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__pedOi\",\"btn\":\"ContactsItem_btn__49qOg\"};","import PropTypes from 'prop-types';\nimport s from './ContactsItem.module.css';\n\nconst ContactsItem = ({\n  name,\n  number,\n  id,\n  handleCheckboxChange,\n  handleDeleteClick,\n}) => {\n  return (\n    <li className={s.item}>\n      <input type=\"checkbox\" name={id} onChange={handleCheckboxChange} />\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        className={s.btn}\n        onClick={() => {\n          handleDeleteClick(id);\n        }}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  onCheckboxChange: PropTypes.func,\n  handleDeleteClick: PropTypes.func,\n};\n","export const getFilteredContacts = ({ contacts }) => {\n  const {\n    list: { items },\n    filter,\n  } = contacts;\n  if (!filter) {\n    return items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredItems = items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n    return normalizedName.includes(normalizedFilter);\n  });\n\n  return filteredItems;\n};\n","export const getLoading = ({ contacts }) => contacts.list.loading;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__3daws\",\"btn\":\"ContactList_btn__QQhmE\"};","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"ServerLoader_backdrop__S6LI0\",\"modal\":\"ServerLoader_modal__NxgkZ\",\"smile\":\"ServerLoader_smile__XsHAV\"};","import s from './ServerLoader.module.css';\n\nconst ServerLoader = () => {\n  return (\n    <div className={s.backdrop}>\n      <div className={s.modal}>\n        <span className={s.smile}>💩</span>\n        <p>Loading...</p>\n        <p>Sorry, it's free backend</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ServerLoader;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getContacts,\n  deleteContact,\n  deleteCheckedContacts,\n  checkContacts,\n} from 'redux/contacts/list/list-operations';\nimport ContactsItem from 'components/ContactsItem/ContactsItem';\nimport { getFilteredContacts } from 'redux/contacts/list/items/items-selectors';\nimport { getLoading } from 'redux/contacts/list/loading/loading-selecors';\nimport s from './ContactList.module.css';\nimport ServerLoader from 'components/ServerLoader/ServerLoader';\n\nconst ContactLists = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const loading = useSelector(getLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const handleDeleteClick = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const handleCheckboxChange = ({ target }) => {\n    const contactId = target.name;\n    dispatch(checkContacts(contactId));\n  };\n\n  const handleDeleteAllClick = () => {\n    const checkedContact = contacts.filter(({ checked }) => checked);\n    dispatch(deleteCheckedContacts(checkedContact));\n  };\n\n  const activeButton = contacts.some(({ checked }) => checked);\n\n  return (\n    <>\n      {loading && <ServerLoader />}\n      <ul className={s.list}>\n        {contacts.map(({ name, number, id }) => (\n          <ContactsItem\n            key={id}\n            name={name}\n            number={number}\n            id={id}\n            handleCheckboxChange={handleCheckboxChange}\n            handleDeleteClick={handleDeleteClick}\n          />\n        ))}\n        {contacts.length !== 0 && (\n          <button\n            className={s.btn}\n            onClick={handleDeleteAllClick}\n            type=\"button\"\n            disabled={!activeButton}\n          >\n            Delete checked\n          </button>\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactLists;\n","export const getFilter = ({ contacts }) => contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactsSearch_label__mgwZY\",\"input\":\"ContactsSearch_input__70Sq6\"};","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filter/filter-slice';\nimport { getFilter } from 'redux/contacts/filter/filter-selectors';\nimport s from './ContactsSearch.module.css';\n\nconst ContactsSearch = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const filterContact = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        onChange={filterContact}\n        value={filter}\n        type=\"text\"\n      />\n    </label>\n  );\n};\n\nexport default ContactsSearch;\n\nContactsSearch.propTypes = {\n  filter: PropTypes.func,\n  value: PropTypes.string,\n};\n","const Title = ({ title }) => <h2>{title}</h2>;\n\nexport default Title;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UserMenu_container__KolyR\",\"wrapper\":\"UserMenu_wrapper__YvbMI\",\"link\":\"UserMenu_link__d6eY9\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getUserData } from 'redux/auth/auth-selectors';\nimport { logout } from 'redux/auth/auth-operations';\nimport s from './UserMenu.module.css';\n\nconst UserMenu = () => {\n  const { name, email } = useSelector(getUserData);\n  const dispatch = useDispatch();\n\n  const handleLogoutClick = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <div className={s.wrapper}>\n      <h2>Hello, {name}!</h2>\n      <div className={s.container}>\n        <p>{email}</p>\n        <Link onClick={handleLogoutClick} to=\"/\" className={s.link}>\n          Logout\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default UserMenu;\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactLists from 'components/ContactsList/ContactList';\nimport ContactsSearch from 'components/ContactsSearch/ContactsSearch';\nimport Title from 'components/Title/Title';\nimport UserMenu from 'components/UserMenu/UserMenu';\n\nconst Contacts = () => {\n  return (\n    <>\n      <UserMenu />\n      <Title title={'Phonebook'} />\n      <ContactsForm />\n      <Title title={'Contacts'} />\n      <ContactsSearch />\n      <ContactLists />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","useState","name","setName","number","setNumber","inputNameId","useRef","inputNumberId","dispatch","useDispatch","reset","className","s","onSubmit","e","preventDefault","newContact","checked","addContact","htmlFor","type","pattern","title","required","value","onChange","target","handleCheckboxChange","handleDeleteClick","onClick","getFilteredContacts","contacts","items","list","filter","normalizedFilter","toLowerCase","includes","getLoading","loading","useSelector","useEffect","getContacts","deleteContact","contactId","checkContacts","activeButton","some","map","length","checkedContact","deleteCheckedContacts","disabled","getFilter","setFilter","getUserData","email","logout","to","ContactList"],"sourceRoot":""}